syntax = "proto3";

package astrocomm.grpc;

import "google/protobuf/timestamp.proto";
import "google/protobuf/any.proto";
import "google/protobuf/empty.proto";

// Device management service
service DeviceService {
  // Unary RPCs
  rpc RegisterDevice(RegisterDeviceRequest) returns (RegisterDeviceResponse);
  rpc UnregisterDevice(UnregisterDeviceRequest) returns (UnregisterDeviceResponse);
  rpc GetDevice(GetDeviceRequest) returns (GetDeviceResponse);
  rpc ListDevices(ListDevicesRequest) returns (ListDevicesResponse);
  rpc UpdateDeviceConfig(UpdateDeviceConfigRequest) returns (UpdateDeviceConfigResponse);
  
  // Device commands
  rpc SendCommand(SendCommandRequest) returns (SendCommandResponse);
  rpc GetCommandHistory(GetCommandHistoryRequest) returns (GetCommandHistoryResponse);
  
  // Streaming RPCs
  rpc StreamDeviceData(StreamDeviceDataRequest) returns (stream DeviceDataMessage);
  rpc StreamCommands(stream CommandStreamRequest) returns (stream CommandStreamResponse);
  rpc BidirectionalStream(stream DeviceMessage) returns (stream DeviceMessage);
  
  // Device status monitoring
  rpc MonitorDeviceStatus(MonitorStatusRequest) returns (stream DeviceStatusUpdate);
  rpc GetDeviceMetrics(GetDeviceMetricsRequest) returns (GetDeviceMetricsResponse);
}

// Communication service for real-time messaging
service CommunicationService {
  // Real-time messaging
  rpc SendMessage(SendMessageRequest) returns (SendMessageResponse);
  rpc StreamMessages(StreamMessagesRequest) returns (stream MessageStreamResponse);
  rpc BidirectionalMessaging(stream MessageRequest) returns (stream MessageResponse);
  
  // Broadcast and multicast
  rpc BroadcastMessage(BroadcastMessageRequest) returns (BroadcastMessageResponse);
  rpc MulticastMessage(MulticastMessageRequest) returns (MulticastMessageResponse);
  
  // Presence and discovery
  rpc UpdatePresence(UpdatePresenceRequest) returns (UpdatePresenceResponse);
  rpc DiscoverDevices(DiscoverDevicesRequest) returns (stream DeviceDiscoveryResponse);
}

// System management service
service SystemService {
  // System status and health
  rpc GetSystemStatus(google.protobuf.Empty) returns (SystemStatusResponse);
  rpc GetSystemMetrics(GetSystemMetricsRequest) returns (GetSystemMetricsResponse);
  rpc StreamSystemEvents(StreamSystemEventsRequest) returns (stream SystemEventMessage);
  
  // Configuration management
  rpc GetConfiguration(GetConfigurationRequest) returns (GetConfigurationResponse);
  rpc UpdateConfiguration(UpdateConfigurationRequest) returns (UpdateConfigurationResponse);
  
  // Server management
  rpc RestartServer(RestartServerRequest) returns (RestartServerResponse);
  rpc ShutdownServer(ShutdownServerRequest) returns (ShutdownServerResponse);
}

// Device registration messages
message RegisterDeviceRequest {
  string device_id = 1;
  string device_type = 2;
  string device_name = 3;
  map<string, string> properties = 4;
  repeated string capabilities = 5;
  DeviceConfiguration config = 6;
}

message RegisterDeviceResponse {
  bool success = 1;
  string message = 2;
  string assigned_device_id = 3;
  google.protobuf.Timestamp registered_at = 4;
}

message UnregisterDeviceRequest {
  string device_id = 1;
  string reason = 2;
}

message UnregisterDeviceResponse {
  bool success = 1;
  string message = 2;
}

// Device information messages
message GetDeviceRequest {
  string device_id = 1;
  bool include_status = 2;
  bool include_metrics = 3;
}

message GetDeviceResponse {
  DeviceInfo device = 1;
  DeviceStatus status = 2;
  DeviceMetrics metrics = 3;
}

message ListDevicesRequest {
  string device_type_filter = 1;
  string status_filter = 2;
  int32 page_size = 3;
  string page_token = 4;
  bool include_offline = 5;
}

message ListDevicesResponse {
  repeated DeviceInfo devices = 1;
  string next_page_token = 2;
  int32 total_count = 3;
}

// Device configuration messages
message UpdateDeviceConfigRequest {
  string device_id = 1;
  DeviceConfiguration config = 2;
  bool merge_config = 3;
}

message UpdateDeviceConfigResponse {
  bool success = 1;
  string message = 2;
  DeviceConfiguration updated_config = 3;
}

// Command messages
message SendCommandRequest {
  string device_id = 1;
  string command = 2;
  google.protobuf.Any parameters = 3;
  int32 timeout_seconds = 4;
  bool async_execution = 5;
  string correlation_id = 6;
}

message SendCommandResponse {
  bool success = 1;
  string message = 2;
  google.protobuf.Any result = 3;
  string execution_id = 4;
  google.protobuf.Timestamp executed_at = 5;
}

message GetCommandHistoryRequest {
  string device_id = 1;
  google.protobuf.Timestamp start_time = 2;
  google.protobuf.Timestamp end_time = 3;
  int32 limit = 4;
}

message GetCommandHistoryResponse {
  repeated CommandHistoryEntry commands = 1;
  bool has_more = 2;
}

// Streaming messages
message StreamDeviceDataRequest {
  string device_id = 1;
  repeated string data_types = 2;
  int32 sample_rate_hz = 3;
  bool include_metadata = 4;
}

message DeviceDataMessage {
  string device_id = 1;
  string data_type = 2;
  google.protobuf.Any data = 3;
  google.protobuf.Timestamp timestamp = 4;
  map<string, string> metadata = 5;
}

message CommandStreamRequest {
  oneof request_type {
    SendCommandRequest command = 1;
    string heartbeat = 2;
    string cancel_command = 3;
  }
}

message CommandStreamResponse {
  oneof response_type {
    SendCommandResponse command_result = 1;
    string heartbeat_ack = 2;
    string error_message = 3;
  }
}

message DeviceMessage {
  string device_id = 1;
  string message_type = 2;
  google.protobuf.Any payload = 3;
  google.protobuf.Timestamp timestamp = 4;
  string correlation_id = 5;
}

// Status monitoring messages
message MonitorStatusRequest {
  repeated string device_ids = 1;
  int32 update_interval_seconds = 2;
  bool include_metrics = 3;
}

message DeviceStatusUpdate {
  string device_id = 1;
  DeviceStatus status = 2;
  DeviceMetrics metrics = 3;
  google.protobuf.Timestamp timestamp = 4;
}

message GetDeviceMetricsRequest {
  string device_id = 1;
  google.protobuf.Timestamp start_time = 2;
  google.protobuf.Timestamp end_time = 3;
  repeated string metric_names = 4;
}

message GetDeviceMetricsResponse {
  string device_id = 1;
  repeated MetricSeries metrics = 2;
  google.protobuf.Timestamp generated_at = 3;
}

// Communication messages
message SendMessageRequest {
  string target_device_id = 1;
  string message_type = 2;
  google.protobuf.Any payload = 3;
  int32 priority = 4;
  bool require_ack = 5;
}

message SendMessageResponse {
  bool success = 1;
  string message = 2;
  string message_id = 3;
  google.protobuf.Timestamp sent_at = 4;
}

message StreamMessagesRequest {
  string device_id = 1;
  repeated string message_types = 2;
  bool include_system_messages = 3;
}

message MessageStreamResponse {
  string message_id = 1;
  string source_device_id = 2;
  string message_type = 3;
  google.protobuf.Any payload = 4;
  google.protobuf.Timestamp timestamp = 5;
}

message MessageRequest {
  oneof request_type {
    SendMessageRequest send_message = 1;
    string subscribe_to_type = 2;
    string unsubscribe_from_type = 3;
  }
}

message MessageResponse {
  oneof response_type {
    SendMessageResponse send_result = 1;
    MessageStreamResponse message = 2;
    string subscription_ack = 3;
    string error = 4;
  }
}

// Broadcast and multicast messages
message BroadcastMessageRequest {
  string message_type = 1;
  google.protobuf.Any payload = 2;
  repeated string exclude_device_ids = 3;
  string device_type_filter = 4;
}

message BroadcastMessageResponse {
  bool success = 1;
  string message = 2;
  int32 devices_reached = 3;
  repeated string failed_device_ids = 4;
}

message MulticastMessageRequest {
  repeated string target_device_ids = 1;
  string message_type = 2;
  google.protobuf.Any payload = 3;
  bool fail_on_any_error = 4;
}

message MulticastMessageResponse {
  bool success = 1;
  string message = 2;
  int32 successful_deliveries = 3;
  repeated string failed_device_ids = 4;
}

// Presence and discovery messages
message UpdatePresenceRequest {
  string device_id = 1;
  PresenceStatus status = 2;
  map<string, string> metadata = 3;
}

message UpdatePresenceResponse {
  bool success = 1;
  string message = 2;
}

message DiscoverDevicesRequest {
  string device_type_filter = 1;
  bool include_offline = 2;
  int32 timeout_seconds = 3;
}

message DeviceDiscoveryResponse {
  DeviceInfo device = 1;
  PresenceStatus presence = 2;
  google.protobuf.Timestamp discovered_at = 3;
}

// System messages
message SystemStatusResponse {
  string server_version = 1;
  google.protobuf.Timestamp start_time = 2;
  int64 uptime_seconds = 3;
  SystemHealth health = 4;
  repeated ProtocolStatus protocols = 5;
  SystemMetrics metrics = 6;
}

message GetSystemMetricsRequest {
  google.protobuf.Timestamp start_time = 1;
  google.protobuf.Timestamp end_time = 2;
  repeated string metric_names = 3;
  int32 resolution_seconds = 4;
}

message GetSystemMetricsResponse {
  repeated MetricSeries metrics = 1;
  google.protobuf.Timestamp generated_at = 2;
}

message StreamSystemEventsRequest {
  repeated string event_types = 1;
  string severity_filter = 2;
}

message SystemEventMessage {
  string event_type = 1;
  string severity = 2;
  string message = 3;
  google.protobuf.Any details = 4;
  google.protobuf.Timestamp timestamp = 5;
}

// Configuration messages
message GetConfigurationRequest {
  string component = 1;
  repeated string keys = 2;
}

message GetConfigurationResponse {
  map<string, string> configuration = 1;
  google.protobuf.Timestamp last_updated = 2;
}

message UpdateConfigurationRequest {
  string component = 1;
  map<string, string> configuration = 2;
  bool merge_config = 3;
}

message UpdateConfigurationResponse {
  bool success = 1;
  string message = 2;
  map<string, string> updated_configuration = 3;
}

// Server management messages
message RestartServerRequest {
  string reason = 1;
  int32 delay_seconds = 2;
  bool graceful = 3;
}

message RestartServerResponse {
  bool success = 1;
  string message = 2;
  google.protobuf.Timestamp restart_scheduled_at = 3;
}

message ShutdownServerRequest {
  string reason = 1;
  int32 delay_seconds = 2;
  bool graceful = 3;
}

message ShutdownServerResponse {
  bool success = 1;
  string message = 2;
  google.protobuf.Timestamp shutdown_scheduled_at = 3;
}
